<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">

  <title><![CDATA[Categoria: php | seisxis]]></title>
  <link href="http://www.seisxis.com/blog/categories/php/atom.xml" rel="self"/>
  <link href="http://www.seisxis.com/"/>
  <updated>2012-06-18T16:26:02-03:00</updated>
  <id>http://www.seisxis.com/</id>
  <author>
    <name><![CDATA[Junior Andrade]]></name>
    
  </author>
  <generator uri="http://octopress.org/">Octopress</generator>

  
  <entry>
    <title type="html"><![CDATA[Solução para encode de caracteres com PHP]]></title>
    <link href="http://www.seisxis.com/blog/2012/05/30/solucao-para-encode-de-caracteres-com-php/"/>
    <updated>2012-05-30T22:50:00-03:00</updated>
    <id>http://www.seisxis.com/blog/2012/05/30/solucao-para-encode-de-caracteres-com-php</id>
    <content type="html"><![CDATA[<h2>O Problema</h2>


<p>
Tratar de caracteres sempre é um problema quando se diz respeito ao encode. 
Em algumas situações, somos remetidos a lidar com dados de bases diferentes onde o encode também é diferente, porém precisamos trata-los igualmente, seja para apresentação, persistência ou qualquer outra finalidade.
</p>


<p>É ideal que entendamos o funcionamento a tabela de encodes, para isso segue uma artigo interessantíssimo feita pelo site Tableless: <a href="http://tableless.com.br/charsets-e-encodes-tabelas-de-caracteres/">Entenda como funciona a tabela de caracteres e encodes no HTML</a>.
</p></p>

<h2>Certo, mas e a solução?</h2>


<p></p>

<p>
Bem, escrevi uma função hà um tempo atrás para resolver justamente este tipo de problema. 
Desta forma, temos uma função capaz de encodar objetos sejam eles classes, arrays ou strings.

<div class='bogus-wrapper'><notextile><figure class='code'><figcaption><span>charset_transfer.php  </span></figcaption>
 <div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
<span class='line-number'>17</span>
<span class='line-number'>18</span>
<span class='line-number'>19</span>
<span class='line-number'>20</span>
<span class='line-number'>21</span>
<span class='line-number'>22</span>
<span class='line-number'>23</span>
<span class='line-number'>24</span>
<span class='line-number'>25</span>
<span class='line-number'>26</span>
<span class='line-number'>27</span>
<span class='line-number'>28</span>
<span class='line-number'>29</span>
<span class='line-number'>30</span>
<span class='line-number'>31</span>
<span class='line-number'>32</span>
<span class='line-number'>33</span>
<span class='line-number'>34</span>
<span class='line-number'>35</span>
<span class='line-number'>36</span>
<span class='line-number'>37</span>
<span class='line-number'>38</span>
<span class='line-number'>39</span>
<span class='line-number'>40</span>
<span class='line-number'>41</span>
<span class='line-number'>42</span>
<span class='line-number'>43</span>
<span class='line-number'>44</span>
<span class='line-number'>45</span>
<span class='line-number'>46</span>
<span class='line-number'>47</span>
<span class='line-number'>48</span>
<span class='line-number'>49</span>
<span class='line-number'>50</span>
<span class='line-number'>51</span>
<span class='line-number'>52</span>
<span class='line-number'>53</span>
<span class='line-number'>54</span>
<span class='line-number'>55</span>
</pre></td><td class='code'><pre><code class='php'><span class='line'><span class="cp">&lt;?php</span>
</span><span class='line'><span class="sd">/**</span>
</span><span class='line'><span class="sd"> * Funcao para encodar/decodar (charset) texto.</span>
</span><span class='line'><span class="sd"> * Suporta array multidimensional</span>
</span><span class='line'><span class="sd"> *</span>
</span><span class='line'><span class="sd"> * @author kenshin6x &lt;seisxis@gmail.com&gt;</span>
</span><span class='line'><span class="sd"> *</span>
</span><span class='line'><span class="sd"> * @param mixed $input Valor a ser encodado/decodado. Caso seja um objeto, é necessario que seus atributos sejam publicos, e neste caso, o retorno sera uma copia do objeto, mantendo nome e atributos</span>
</span><span class='line'><span class="sd"> * @param string $function Nome da funcao a ser usada para transferir.</span>
</span><span class='line'><span class="sd"> *</span>
</span><span class='line'><span class="sd"> * @return mixed $return</span>
</span><span class='line'><span class="sd"> */</span>
</span><span class='line'>
</span><span class='line'><span class="k">function</span> <span class="nf">charset_transfer</span><span class="p">(</span><span class="nv">$input</span><span class="p">,</span><span class="nv">$function</span><span class="p">)</span> <span class="p">{</span>
</span><span class='line'>    <span class="k">switch</span><span class="p">(</span><span class="nb">gettype</span><span class="p">(</span><span class="nv">$input</span><span class="p">))</span> <span class="p">{</span>
</span><span class='line'>        <span class="k">case</span> <span class="s2">&quot;string&quot;</span><span class="o">:</span>
</span><span class='line'>            <span class="nv">$return</span> <span class="o">=</span> <span class="nb">call_user_func</span><span class="p">(</span><span class="nv">$function</span><span class="p">,</span><span class="nv">$input</span><span class="p">);</span>
</span><span class='line'>        <span class="k">break</span><span class="p">;</span>
</span><span class='line'>
</span><span class='line'>        <span class="k">case</span> <span class="s2">&quot;array&quot;</span><span class="o">:</span>
</span><span class='line'>            <span class="k">foreach</span> <span class="p">(</span><span class="nv">$input</span> <span class="k">as</span> <span class="nv">$key</span> <span class="o">=&gt;</span> <span class="nv">$val</span><span class="p">)</span> <span class="p">{</span>
</span><span class='line'>                <span class="k">if</span><span class="p">(</span><span class="nb">is_string</span><span class="p">(</span><span class="nv">$val</span><span class="p">))</span> <span class="p">{</span>
</span><span class='line'>                    <span class="nv">$return</span><span class="p">[</span><span class="nv">$key</span><span class="p">]</span> <span class="o">=</span> <span class="nb">call_user_func</span><span class="p">(</span><span class="nv">$function</span><span class="p">,</span><span class="nv">$val</span><span class="p">);</span>
</span><span class='line'>                <span class="p">}</span> <span class="k">else</span> <span class="p">{</span>
</span><span class='line'>                    <span class="nv">$returnTemp</span> <span class="o">=</span> <span class="nx">charset_transfer</span><span class="p">(</span><span class="nv">$val</span><span class="p">,</span><span class="nv">$function</span><span class="p">);</span>
</span><span class='line'>                    <span class="nv">$return</span><span class="p">[</span><span class="nv">$key</span><span class="p">]</span> <span class="o">=</span> <span class="nv">$returnTemp</span><span class="p">;</span>
</span><span class='line'>                <span class="p">}</span>
</span><span class='line'>            <span class="p">}</span>
</span><span class='line'>        <span class="k">break</span><span class="p">;</span>
</span><span class='line'>
</span><span class='line'>        <span class="k">case</span> <span class="s2">&quot;object&quot;</span><span class="o">:</span>
</span><span class='line'>            <span class="nv">$inputVars</span> <span class="o">=</span> <span class="nb">get_object_vars</span><span class="p">(</span><span class="nv">$input</span><span class="p">);</span>
</span><span class='line'>            <span class="nv">$className</span> <span class="o">=</span> <span class="nb">get_class</span><span class="p">(</span><span class="nv">$input</span><span class="p">);</span>
</span><span class='line'>            <span class="nv">$classInstance</span> <span class="o">=</span> <span class="k">new</span> <span class="nv">$className</span><span class="p">();</span>
</span><span class='line'>
</span><span class='line'>            <span class="k">foreach</span> <span class="p">(</span><span class="nv">$inputVars</span> <span class="k">as</span> <span class="nv">$key</span> <span class="o">=&gt;</span> <span class="nv">$val</span><span class="p">)</span> <span class="p">{</span>
</span><span class='line'>                <span class="k">if</span><span class="p">(</span><span class="nb">is_string</span><span class="p">(</span><span class="nv">$val</span><span class="p">))</span> <span class="p">{</span>
</span><span class='line'>                    <span class="nv">$classInstance</span><span class="o">-&gt;</span><span class="nv">$key</span> <span class="o">=</span> <span class="nb">call_user_func</span><span class="p">(</span><span class="nv">$function</span><span class="p">,</span><span class="nv">$val</span><span class="p">);</span>
</span><span class='line'>                <span class="p">}</span> <span class="k">else</span> <span class="p">{</span>
</span><span class='line'>                    <span class="nv">$returnTemp</span> <span class="o">=</span> <span class="nx">charset_transfer</span><span class="p">(</span><span class="nv">$val</span><span class="p">,</span><span class="nv">$function</span><span class="p">);</span>
</span><span class='line'>                    <span class="nv">$classInstance</span><span class="o">-&gt;</span><span class="nv">$key</span> <span class="o">=</span> <span class="nv">$returnTemp</span><span class="p">;</span>
</span><span class='line'>                <span class="p">}</span>
</span><span class='line'>            <span class="p">}</span>
</span><span class='line'>
</span><span class='line'>            <span class="k">return</span> <span class="nv">$classInstance</span><span class="p">;</span>
</span><span class='line'>
</span><span class='line'>        <span class="k">break</span><span class="p">;</span>
</span><span class='line'>
</span><span class='line'>        <span class="k">default</span><span class="o">:</span>
</span><span class='line'>            <span class="k">die</span><span class="p">(</span><span class="s2">&quot;charset_transfer ERROR: TYPE UNSUPPORTED&quot;</span><span class="p">);</span>
</span><span class='line'>    <span class="p">}</span>
</span><span class='line'>
</span><span class='line'>    <span class="k">return</span> <span class="nv">$return</span><span class="p">;</span>
</span><span class='line'><span class="p">}</span>
</span><span class='line'><span class="cp">?&gt;</span><span class="x"></span>
</span></code></pre></td></tr></table></div></figure></notextile></div>
</p>

]]></content>
  </entry>
  
</feed>
